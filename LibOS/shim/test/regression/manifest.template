loader.preload = "file:../../src/libsysdb.so"
loader.env.LD_LIBRARY_PATH = "/lib:$(ARCH_LIBDIR):/usr/$(ARCH_LIBDIR)"
loader.debug_type = "none"
loader.insecure__use_cmdline_argv = 1
loader.entrypoint = "file:$(ENTRYPOINT)"

fs.mount.graphene_lib.type = "chroot"
fs.mount.graphene_lib.path = "/lib"
fs.mount.graphene_lib.uri = "file:../../../../Runtime"

fs.mount.host_lib.type = "chroot"
fs.mount.host_lib.path = "$(ARCH_LIBDIR)"
fs.mount.host_lib.uri = "file:$(ARCH_LIBDIR)"

fs.mount.host_usr_lib.type = "chroot"
fs.mount.host_usr_lib.path = "/usr/$(ARCH_LIBDIR)"
fs.mount.host_usr_lib.uri = "file:/usr/$(ARCH_LIBDIR)"

fs.mount.bin.type = "chroot"
fs.mount.bin.path = "/bin"
fs.mount.bin.uri = "file:/bin"

fs.mount.devkmsg.type = "chroot"
fs.mount.devkmsg.path = "/dev/kmsg"
fs.mount.devkmsg.uri = "dev:/dev/kmsg"

sgx.trusted_files.ld = "file:../../../../Runtime/ld-linux-x86-64.so.2"
sgx.trusted_files.libc = "file:../../../../Runtime/libc.so.6"
sgx.trusted_files.libdl = "file:../../../../Runtime/libdl.so.2"
sgx.trusted_files.libm = "file:../../../../Runtime/libm.so.6"
sgx.trusted_files.libpthread = "file:../../../../Runtime/libpthread.so.0"
sgx.trusted_files.libgcc_s = "file:$(ARCH_LIBDIR)/libgcc_s.so.1"
sgx.trusted_files.libstdcxx = "file:/usr$(ARCH_LIBDIR)/libstdc++.so.6"

# TODO: remove, debugging stuff in progress
sgx.trusted_files.attestation = "file:attestation"
sgx.trusted_files.bootstrap_cpp = "file:bootstrap_cpp"
sgx.trusted_files.cpuid = "file:cpuid"
sgx.trusted_files.debug_regs-x86_64 = "file:debug_regs-x86_64"
sgx.trusted_files.rdtsc = "file:rdtsc"
sgx.trusted_files.sighandler_divbyzero = "file:sighandler_divbyzero"
sgx.trusted_files.abort = "file:abort"
sgx.trusted_files.abort_multithread = "file:abort_multithread"
sgx.trusted_files.bootstrap = "file:bootstrap"
sgx.trusted_files.bootstrap_pie = "file:bootstrap_pie"
sgx.trusted_files.bootstrap_static = "file:bootstrap_static"
sgx.trusted_files.debug = "file:debug"
sgx.trusted_files.dev = "file:dev"
sgx.trusted_files.device = "file:device"
sgx.trusted_files.epoll_wait_timeout = "file:epoll_wait_timeout"
sgx.trusted_files.eventfd = "file:eventfd"
sgx.trusted_files.exec = "file:exec"
sgx.trusted_files.exec_fork = "file:exec_fork"
sgx.trusted_files.exec_invalid_args = "file:exec_invalid_args"
sgx.trusted_files.exec_same = "file:exec_same"
sgx.trusted_files.exec_victim = "file:exec_victim"
sgx.trusted_files.exit = "file:exit"
sgx.trusted_files.exit_group = "file:exit_group"
sgx.trusted_files.fdleak = "file:fdleak"
sgx.trusted_files.file_check_policy = "file:file_check_policy"
sgx.trusted_files.file_size = "file:file_size"
sgx.trusted_files.fopen_cornercases = "file:fopen_cornercases"
sgx.trusted_files.fork_and_exec = "file:fork_and_exec"
sgx.trusted_files.fp_multithread = "file:fp_multithread"
sgx.trusted_files.fstat_cwd = "file:fstat_cwd"
sgx.trusted_files.futex_bitset = "file:futex_bitset"
sgx.trusted_files.futex_requeue = "file:futex_requeue"
sgx.trusted_files.futex_timeout = "file:futex_timeout"
sgx.trusted_files.futex_wake_op = "file:futex_wake_op"
sgx.trusted_files.getcwd = "file:getcwd"
sgx.trusted_files.getdents = "file:getdents"
sgx.trusted_files.getsockname = "file:getsockname"
sgx.trusted_files.getsockopt = "file:getsockopt"
sgx.trusted_files.groups = "file:groups"
sgx.trusted_files.host_root_fs = "file:host_root_fs"
sgx.trusted_files.init_fail = "file:init_fail"
sgx.trusted_files.large_mmap = "file:large_mmap"
sgx.trusted_files.large_dir_read = "file:large_dir_read"
sgx.trusted_files.madvise = "file:madvise"
sgx.trusted_files.mkfifo = "file:mkfifo"
sgx.trusted_files.mmap_file = "file:mmap_file"
sgx.trusted_files.mprotect_file_fork = "file:mprotect_file_fork"
sgx.trusted_files.mprotect_prot_growsdown = "file:mprotect_prot_growsdown"
sgx.trusted_files.multi_pthread = "file:multi_pthread"
sgx.trusted_files.openmp = "file:openmp"
sgx.trusted_files.pipe = "file:pipe"
sgx.trusted_files.pipe_nonblocking = "file:pipe_nonblocking"
sgx.trusted_files.pipe_ocloexec = "file:pipe_ocloexec"
sgx.trusted_files.poll = "file:poll"
sgx.trusted_files.poll_closed_fd = "file:poll_closed_fd"
sgx.trusted_files.poll_many_types = "file:poll_many_types"
sgx.trusted_files.ppoll = "file:ppoll"
sgx.trusted_files.proc_common = "file:proc_common"
sgx.trusted_files.proc_cpuinfo = "file:proc_cpuinfo"
sgx.trusted_files.proc_path = "file:proc_path"
sgx.trusted_files.pselect = "file:pselect"
sgx.trusted_files.pthread_set_get_affinity = "file:pthread_set_get_affinity"
sgx.trusted_files.readdir = "file:readdir"
sgx.trusted_files.sched = "file:sched"
sgx.trusted_files.sched_set_get_affinity = "file:sched_set_get_affinity"
sgx.trusted_files.select = "file:select"
sgx.trusted_files.shared_object = "file:shared_object"
sgx.trusted_files.sigaction_per_process = "file:sigaction_per_process"
sgx.trusted_files.sigaltstack = "file:sigaltstack"
sgx.trusted_files.sighandler_reset = "file:sighandler_reset"
sgx.trusted_files.sighandler_sigpipe = "file:sighandler_sigpipe"
sgx.trusted_files.signal_multithread = "file:signal_multithread"
sgx.trusted_files.sigprocmask_pending = "file:sigprocmask_pending"
sgx.trusted_files.spinlock = "file:spinlock"
sgx.trusted_files.stat_invalid_args = "file:stat_invalid_args"
sgx.trusted_files.str_close_leak = "file:str_close_leak"
sgx.trusted_files.syscall = "file:syscall"
sgx.trusted_files.tcp_ipv6_v6only = "file:tcp_ipv6_v6only"
sgx.trusted_files.tcp_msg_peek = "file:tcp_msg_peek"
sgx.trusted_files.udp = "file:udp"
sgx.trusted_files.unix = "file:unix"
sgx.trusted_files.vfork_and_exec = "file:vfork_and_exec"

sgx.allowed_files.tmp_dir = "file:tmp/"

# Set this value to at least 4 (1 for the main thread, 2 for Graphene internal threads and 1 for
# helper threads some tests use)
sgx.thread_num = 8

sgx.static_address = 1
